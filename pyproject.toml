[tool.poetry]
name = "glocaltokens"
version = "0.0.0"
authors = ["Ilja Leiko <leikoilja@gmail.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
]
description = "Tool to extract Google device local authentication tokens in Python"
keywords = [
    "Authentication",
    "Google Home",
    "Google",
    "LocalAuthenticationTokens",
]
include = ["glocaltokens/py.typed"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/leikoilja/glocaltokens"
repository = "https://github.com/leikoilja/glocaltokens"

[tool.poetry.dependencies]
python = "^3.9"
gpsoauth = "^1.0.1"
simplejson = "^3.17.2"
ghome-foyer-api = "^1.0.0"
# Note, we want to keep versions of grpcio, requests and zeroconf similar to Home Assistant
# https://github.com/home-assistant/core/blob/2023.2.0/homeassistant/package_constraints.txt
grpcio = ">=1.51.1"
requests = ">=2.28.1"
zeroconf = ">=0.47.1"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
codespell = "^2.2.6"
Faker = "^20.1.0"
flake8 = "^6.1.0"
flake8-bugbear = "^23.9.16"
flake8-comprehensions = "^3.14.0"
flake8-simplify = "^0.21.0"
flake8-use-fstring = "^1.4"
grpc-stubs = "^1.53.0.3"
ipdb = "^0.13.7"
isort = "^5.12.0"
mock = "^5.1.0"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
pylint = "^3.0.2"
pytest = "^7.4.3"
types-protobuf = "^4.24.0.4"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/leikoilja/glocaltokens/issues"
"Release Notes" = "https://github.com/leikoilja/glocaltokens/releases"

[tool.pylint.master]
extension-pkg-whitelist = [
    "_socket",
]

[tool.pylint.basic]
good-names = [
    "zc",
]

[tool.pylint.format]
max-line-length = 88
min-similarity-lines = 7

[tool.pylint.messages_control]
# Reasons disabled:
# too-many-* - are not enforced for the sake of readability
# too-few-* - same as too-many-*
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[tool.mypy]
python_version = "3.9"
show_error_codes = true
strict = true
disallow_any_explicit = true
disallow_any_unimported = true
warn_no_return = true
warn_unreachable = true

[tool.codespell]
ignore-words-list = "aas"
quiet-level = 2
skip = "poetry.lock,./.git/*,./.mypy_cache/*,*.egg-info"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
