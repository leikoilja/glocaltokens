[tool.poetry]
name = "glocaltokens"
version = "0.0.0"
authors = ["Ilja Leiko <leikoilja@gmail.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Typing :: Typed",
]
description = "Tool to extract Google device local authentication tokens in Python"
keywords = [
    "Authentication",
    "Google Home",
    "Google",
    "LocalAuthenticationTokens",
]
include = ["glocaltokens/py.typed"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/leikoilja/glocaltokens"
repository = "https://github.com/leikoilja/glocaltokens"

[tool.poetry.dependencies]
python = "^3.8"
gpsoauth = "^1.0.1"
protobuf = "^3.20.1"
simplejson = "^3.17.2"
# Note, we want to keep versions of grpcio, requests and zeroconf similar to Home Assistant
# https://github.com/home-assistant/core/blob/2022.6.0/homeassistant/package_constraints.txt
grpcio = "^1.46.1"
requests = "^2.27.1"
zeroconf = "^0.38.6"

[tool.poetry.dev-dependencies]
black = "^22.3"
codespell = "^2.1.0"
Faker = "^8.0.0"
flake8 = "^4.0.1"
flake8-bugbear = "^22.4.25"
flake8-comprehensions = "^3.4.0"
flake8-simplify = "^0.19.2"
flake8-use-fstring = "^1.3"
grpc-stubs = "^1.24.10"
# Using newer version will cause compatibility issues with google-wifi integration.
grpcio-tools = "1.43.0"
ipdb = "^0.13.7"
isort = "^5.10.1"
mock = "^4.0.3"
mypy = "^0.961"
mypy-protobuf = "^3.2.0"
pre-commit = "^2.19.0"
pylint = "^2.14.3"
pytest = "^7.1.2"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/leikoilja/glocaltokens/issues"
"Release Notes" = "https://github.com/leikoilja/glocaltokens/releases"

[tool.pylint.master]
extension-pkg-whitelist = [
    "_socket",
]
ignore = ["google"]

[tool.pylint.basic]
good-names = [
    "zc",
]

[tool.pylint.format]
max-line-length = 88
min-similarity-lines = 7

[tool.pylint.messages_control]
# Reasons disabled:
# too-many-* - are not enforced for the sake of readability
# too-few-* - same as too-many-*
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
