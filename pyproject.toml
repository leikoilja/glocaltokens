[project]
name = "glocaltokens"
authors = [{ name = "Ilja Leiko", email = "leikoilja@gmail.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
]
description = "Tool to extract Google device local authentication tokens in Python"
keywords = [
    "Authentication",
    "Google Home",
    "Google",
    "LocalAuthenticationTokens",
]
include = ["glocaltokens/py.typed"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/leikoilja/glocaltokens"
repository = "https://github.com/leikoilja/glocaltokens"
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = [
    "ghome-foyer-api >= 1.0.0",
    "gpsoauth >= 1.1.1",
    "simplejson >= 3.19.3",
    # Note, we want to keep versions of grpcio, requests and zeroconf similar to Home Assistant
    # https://github.com/home-assistant/core/blob/2024.9.0/homeassistant/package_constraints.txt
    "grpcio >= 1.59.0",
    "requests >= 2.32.3",
    "zeroconf >= 0.133.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/leikoilja/glocaltokens/issues"
"Release Notes" = "https://github.com/leikoilja/glocaltokens/releases"

[tool.uv]
dev-dependencies = [
    "codespell >= 2.3.0",
    "faker >= 20.1.0",
    "flake8 >= 6.1.0",
    "flake8-bugbear >= 23.12.2",
    "flake8-comprehensions >= 3.15.0",
    "flake8-simplify >= 0.21.0",
    "flake8-use-fstring >= 1.4",
    "grpc-stubs >= 1.53.0.5",
    "isort >= 5.13.2",
    "mock >= 5.1.0",
    "mypy >= 1.11.0",
    "pre-commit >= 3.8.0",
    "pylint >= 3.2.7",
    "pytest >= 7.4.4",
    "ruff>=0.6.4",
    "types-protobuf >= 4.25.0.20240417",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.ruff]
required-version = ">=0.6.0"
target-version = "py39"

[tool.pylint.master]
extension-pkg-whitelist = [
    "_socket",
]

[tool.pylint.basic]
good-names = [
    "zc",
]

[tool.pylint.format]
max-line-length = 88
min-similarity-lines = 7

[tool.pylint.messages_control]
# Reasons disabled:
# too-many-* - are not enforced for the sake of readability
# too-few-* - same as too-many-*
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[tool.mypy]
python_version = "3.9"
show_error_codes = true
strict = true
disallow_any_explicit = true
disallow_any_unimported = true
warn_no_return = true
warn_unreachable = true

[tool.codespell]
ignore-words-list = "aas"
quiet-level = 2
skip = "uv.lock,./.git/*,./.mypy_cache/*,./.venv/*,*.egg-info"
