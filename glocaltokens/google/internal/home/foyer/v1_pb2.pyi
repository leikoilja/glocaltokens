"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    float,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Iterable,
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor = ...

class GetAssistantRoutinesRequest(Message):
    DESCRIPTOR: Descriptor = ...

    def __init__(self,
        ) -> None: ...

class GetAssistantRoutinesResponse(Message):
    DESCRIPTOR: Descriptor = ...
    class Part1(Message):
        DESCRIPTOR: Descriptor = ...
        class WorkFlow(Message):
            DESCRIPTOR: Descriptor = ...
            class WF_Sub1(Message):
                DESCRIPTOR: Descriptor = ...
                class WF_Sub1_Sub1(Message):
                    DESCRIPTOR: Descriptor = ...
                    class Routine(Message):
                        DESCRIPTOR: Descriptor = ...
                        ROUTINE_ID_FIELD_NUMBER: int
                        NUM2_FIELD_NUMBER: int
                        ROUTINE_NAME_FIELD_NUMBER: int
                        routine_id: Text = ...
                        num2: int = ...
                        routine_name: Text = ...

                        def __init__(self,
                            *,
                            routine_id : Text = ...,
                            num2 : int = ...,
                            routine_name : Text = ...,
                            ) -> None: ...
                        def ClearField(self, field_name: Literal[u"num2",b"num2",u"routine_id",b"routine_id",u"routine_name",b"routine_name"]) -> None: ...

                    STRING1_FIELD_NUMBER: int
                    ROUTINE_FIELD_NUMBER: int
                    string1: Text = ...

                    @property
                    def routine(self) -> GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1.WF_Sub1_Sub1.Routine: ...

                    def __init__(self,
                        *,
                        string1 : Text = ...,
                        routine : Optional[GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1.WF_Sub1_Sub1.Routine] = ...,
                        ) -> None: ...
                    def HasField(self, field_name: Literal[u"routine",b"routine"]) -> bool: ...
                    def ClearField(self, field_name: Literal[u"routine",b"routine",u"string1",b"string1"]) -> None: ...

                STRING1_FIELD_NUMBER: int
                WF_S1_S1_FIELD_NUMBER: int
                string1: Text = ...

                @property
                def wf_s1_s1(self) -> GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1.WF_Sub1_Sub1: ...

                def __init__(self,
                    *,
                    string1 : Text = ...,
                    wf_s1_s1 : Optional[GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1.WF_Sub1_Sub1] = ...,
                    ) -> None: ...
                def HasField(self, field_name: Literal[u"wf_s1_s1",b"wf_s1_s1"]) -> bool: ...
                def ClearField(self, field_name: Literal[u"string1",b"string1",u"wf_s1_s1",b"wf_s1_s1"]) -> None: ...

            TYPE_FIELD_NUMBER: int
            WF_S1_FIELD_NUMBER: int
            type: Text = ...

            @property
            def wf_s1(self) -> GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1: ...

            def __init__(self,
                *,
                type : Text = ...,
                wf_s1 : Optional[GetAssistantRoutinesResponse.Part1.WorkFlow.WF_Sub1] = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"wf_s1",b"wf_s1"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"type",b"type",u"wf_s1",b"wf_s1"]) -> None: ...

        ROUTINE_NAME_FIELD_NUMBER: int
        WORKFLOW_FIELD_NUMBER: int
        STRING4_FIELD_NUMBER: int
        STRING5_FIELD_NUMBER: int
        routine_name: Text = ...
        string4: Text = ...
        string5: Text = ...

        @property
        def workflow(self) -> GetAssistantRoutinesResponse.Part1.WorkFlow: ...

        def __init__(self,
            *,
            routine_name : Text = ...,
            workflow : Optional[GetAssistantRoutinesResponse.Part1.WorkFlow] = ...,
            string4 : Text = ...,
            string5 : Text = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"workflow",b"workflow"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"routine_name",b"routine_name",u"string4",b"string4",u"string5",b"string5",u"workflow",b"workflow"]) -> None: ...

    class Part2(Message):
        DESCRIPTOR: Descriptor = ...
        STRING1_FIELD_NUMBER: int
        STRING3_FIELD_NUMBER: int
        string1: Text = ...
        string3: Text = ...

        def __init__(self,
            *,
            string1 : Text = ...,
            string3 : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"string1",b"string1",u"string3",b"string3"]) -> None: ...

    P1_FIELD_NUMBER: int
    P2_FIELD_NUMBER: int

    @property
    def p1(self) -> RepeatedCompositeFieldContainer[GetAssistantRoutinesResponse.Part1]: ...

    @property
    def p2(self) -> GetAssistantRoutinesResponse.Part2: ...

    def __init__(self,
        *,
        p1 : Optional[Iterable[GetAssistantRoutinesResponse.Part1]] = ...,
        p2 : Optional[GetAssistantRoutinesResponse.Part2] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"p2",b"p2"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"p1",b"p1",u"p2",b"p2"]) -> None: ...

class GetHomeGraphRequest(Message):
    DESCRIPTOR: Descriptor = ...
    STRING1_FIELD_NUMBER: int
    NUM2_FIELD_NUMBER: int
    string1: Text = ...
    num2: Text = ...

    def __init__(self,
        *,
        string1 : Text = ...,
        num2 : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"num2",b"num2",u"string1",b"string1"]) -> None: ...

class GetHomeGraphResponse(Message):
    DESCRIPTOR: Descriptor = ...
    class Home(Message):
        DESCRIPTOR: Descriptor = ...
        class Location(Message):
            DESCRIPTOR: Descriptor = ...
            class Coordinates(Message):
                DESCRIPTOR: Descriptor = ...
                LATITUDE_FIELD_NUMBER: int
                LONGITUDE_FIELD_NUMBER: int
                latitude: float = ...
                longitude: float = ...

                def __init__(self,
                    *,
                    latitude : float = ...,
                    longitude : float = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"latitude",b"latitude",u"longitude",b"longitude"]) -> None: ...

            ADDRESS_FIELD_NUMBER: int
            COORDINATES_FIELD_NUMBER: int
            TIMESTAMP5_FIELD_NUMBER: int
            TIMEZONE_FIELD_NUMBER: int
            address: Text = ...
            timestamp5: int = ...
            timezone: Text = ...

            @property
            def coordinates(self) -> GetHomeGraphResponse.Home.Location.Coordinates: ...

            def __init__(self,
                *,
                address : Text = ...,
                coordinates : Optional[GetHomeGraphResponse.Home.Location.Coordinates] = ...,
                timestamp5 : int = ...,
                timezone : Text = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"coordinates",b"coordinates"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"address",b"address",u"coordinates",b"coordinates",u"timestamp5",b"timestamp5",u"timezone",b"timezone"]) -> None: ...

        class LinkedUser(Message):
            DESCRIPTOR: Descriptor = ...
            EMAIL_ADDRESS_FIELD_NUMBER: int
            email_address: Text = ...

            def __init__(self,
                *,
                email_address : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"email_address",b"email_address"]) -> None: ...

        class Room(Message):
            DESCRIPTOR: Descriptor = ...
            class Category(Message):
                DESCRIPTOR: Descriptor = ...
                NAME_FIELD_NUMBER: int
                name: Text = ...

                def __init__(self,
                    *,
                    name : Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"name",b"name"]) -> None: ...

            ROOM_ID_FIELD_NUMBER: int
            ROOM_NAME_FIELD_NUMBER: int
            CATEGORY_FIELD_NUMBER: int
            room_id: Text = ...
            room_name: Text = ...

            @property
            def category(self) -> GetHomeGraphResponse.Home.Room.Category: ...

            def __init__(self,
                *,
                room_id : Text = ...,
                room_name : Text = ...,
                category : Optional[GetHomeGraphResponse.Home.Room.Category] = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"category",b"category"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"category",b"category",u"room_id",b"room_id",u"room_name",b"room_name"]) -> None: ...

        class Device(Message):
            DESCRIPTOR: Descriptor = ...
            class DeviceInfo(Message):
                DESCRIPTOR: Descriptor = ...
                class AgentInfo(Message):
                    DESCRIPTOR: Descriptor = ...
                    API_PROJECT_ID_FIELD_NUMBER: int
                    UNIQUE_ID_FIELD_NUMBER: int
                    api_project_id: Text = ...
                    unique_id: Text = ...

                    def __init__(self,
                        *,
                        api_project_id : Text = ...,
                        unique_id : Text = ...,
                        ) -> None: ...
                    def ClearField(self, field_name: Literal[u"api_project_id",b"api_project_id",u"unique_id",b"unique_id"]) -> None: ...

                DEVICE_ID_FIELD_NUMBER: int
                AGENT_INFO_FIELD_NUMBER: int
                device_id: Text = ...

                @property
                def agent_info(self) -> GetHomeGraphResponse.Home.Device.DeviceInfo.AgentInfo: ...

                def __init__(self,
                    *,
                    device_id : Text = ...,
                    agent_info : Optional[GetHomeGraphResponse.Home.Device.DeviceInfo.AgentInfo] = ...,
                    ) -> None: ...
                def HasField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> bool: ...
                def ClearField(self, field_name: Literal[u"agent_info",b"agent_info",u"device_id",b"device_id"]) -> None: ...

            class Message12(Message):
                DESCRIPTOR: Descriptor = ...
                NUM2_FIELD_NUMBER: int
                NUM4_FIELD_NUMBER: int
                NUM5_FIELD_NUMBER: int
                NUM37_FIELD_NUMBER: int
                NUM38_FIELD_NUMBER: int
                NUM45_FIELD_NUMBER: int
                NUM46_FIELD_NUMBER: int
                num2: int = ...
                num4: int = ...
                num5: int = ...
                num37: int = ...
                num38: int = ...
                num45: int = ...
                num46: int = ...

                def __init__(self,
                    *,
                    num2 : int = ...,
                    num4 : int = ...,
                    num5 : int = ...,
                    num37 : int = ...,
                    num38 : int = ...,
                    num45 : int = ...,
                    num46 : int = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"num2",b"num2",u"num37",b"num37",u"num38",b"num38",u"num4",b"num4",u"num45",b"num45",u"num46",b"num46",u"num5",b"num5"]) -> None: ...

            class Message15(Message):
                DESCRIPTOR: Descriptor = ...
                NUM1_FIELD_NUMBER: int
                NUM5_FIELD_NUMBER: int
                NUM6_FIELD_NUMBER: int
                NUM7_FIELD_NUMBER: int
                num1: int = ...
                num5: int = ...
                num6: int = ...
                num7: int = ...

                def __init__(self,
                    *,
                    num1 : int = ...,
                    num5 : int = ...,
                    num6 : int = ...,
                    num7 : int = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"num1",b"num1",u"num5",b"num5",u"num6",b"num6",u"num7",b"num7"]) -> None: ...

            class Hardware(Message):
                DESCRIPTOR: Descriptor = ...
                MODEL_FIELD_NUMBER: int
                model: Text = ...

                def __init__(self,
                    *,
                    model : Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"model",b"model"]) -> None: ...

            class Message18(Message):
                DESCRIPTOR: Descriptor = ...
                DEVICE_NAME_FIELD_NUMBER: int
                device_name: Text = ...

                def __init__(self,
                    *,
                    device_name : Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"device_name",b"device_name"]) -> None: ...

            class Message20(Message):
                DESCRIPTOR: Descriptor = ...
                class Message1(Message):
                    DESCRIPTOR: Descriptor = ...
                    class Value(Message):
                        DESCRIPTOR: Descriptor = ...
                        class Message6(Message):
                            DESCRIPTOR: Descriptor = ...
                            class Message1(Message):
                                DESCRIPTOR: Descriptor = ...
                                class Message5(Message):
                                    DESCRIPTOR: Descriptor = ...
                                    class Message1(Message):
                                        DESCRIPTOR: Descriptor = ...
                                        class Message2(Message):
                                            DESCRIPTOR: Descriptor = ...
                                            BOOL4_FIELD_NUMBER: int
                                            bool4: bool = ...

                                            def __init__(self,
                                                *,
                                                bool4 : bool = ...,
                                                ) -> None: ...
                                            def ClearField(self, field_name: Literal[u"bool4",b"bool4"]) -> None: ...

                                        CAPABILITY_FIELD_NUMBER: int
                                        MESSAGE2_FIELD_NUMBER: int
                                        capability: Text = ...

                                        @property
                                        def message2(self) -> GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5.Message1.Message2: ...

                                        def __init__(self,
                                            *,
                                            capability : Text = ...,
                                            message2 : Optional[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5.Message1.Message2] = ...,
                                            ) -> None: ...
                                        def HasField(self, field_name: Literal[u"message2",b"message2"]) -> bool: ...
                                        def ClearField(self, field_name: Literal[u"capability",b"capability",u"message2",b"message2"]) -> None: ...

                                    MESSAGE1_FIELD_NUMBER: int

                                    @property
                                    def message1(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5.Message1]: ...

                                    def __init__(self,
                                        *,
                                        message1 : Optional[Iterable[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5.Message1]] = ...,
                                        ) -> None: ...
                                    def ClearField(self, field_name: Literal[u"message1",b"message1"]) -> None: ...

                                MESSAGE5_FIELD_NUMBER: int

                                @property
                                def message5(self) -> GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5: ...

                                def __init__(self,
                                    *,
                                    message5 : Optional[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1.Message5] = ...,
                                    ) -> None: ...
                                def HasField(self, field_name: Literal[u"message5",b"message5"]) -> bool: ...
                                def ClearField(self, field_name: Literal[u"message5",b"message5"]) -> None: ...

                            MESSAGE1_FIELD_NUMBER: int

                            @property
                            def message1(self) -> GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1: ...

                            def __init__(self,
                                *,
                                message1 : Optional[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6.Message1] = ...,
                                ) -> None: ...
                            def HasField(self, field_name: Literal[u"message1",b"message1"]) -> bool: ...
                            def ClearField(self, field_name: Literal[u"message1",b"message1"]) -> None: ...

                        MESSAGE6_FIELD_NUMBER: int

                        @property
                        def message6(self) -> GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6: ...

                        def __init__(self,
                            *,
                            message6 : Optional[GetHomeGraphResponse.Home.Device.Message20.Message1.Value.Message6] = ...,
                            ) -> None: ...
                        def HasField(self, field_name: Literal[u"message6",b"message6"]) -> bool: ...
                        def ClearField(self, field_name: Literal[u"message6",b"message6"]) -> None: ...

                    KEY_FIELD_NUMBER: int
                    VALUE_FIELD_NUMBER: int
                    key: Text = ...

                    @property
                    def value(self) -> GetHomeGraphResponse.Home.Device.Message20.Message1.Value: ...

                    def __init__(self,
                        *,
                        key : Text = ...,
                        value : Optional[GetHomeGraphResponse.Home.Device.Message20.Message1.Value] = ...,
                        ) -> None: ...
                    def HasField(self, field_name: Literal[u"value",b"value"]) -> bool: ...
                    def ClearField(self, field_name: Literal[u"key",b"key",u"value",b"value"]) -> None: ...

                MESSAGE1_FIELD_NUMBER: int

                @property
                def message1(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Device.Message20.Message1]: ...

                def __init__(self,
                    *,
                    message1 : Optional[Iterable[GetHomeGraphResponse.Home.Device.Message20.Message1]] = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"message1",b"message1"]) -> None: ...

            class Message25(Message):
                DESCRIPTOR: Descriptor = ...
                BOOL1_FIELD_NUMBER: int
                BOOL2_FIELD_NUMBER: int
                bool1: bool = ...
                bool2: bool = ...

                def __init__(self,
                    *,
                    bool1 : bool = ...,
                    bool2 : bool = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"bool1",b"bool1",u"bool2",b"bool2"]) -> None: ...

            class LinkedUser(Message):
                DESCRIPTOR: Descriptor = ...
                EMAIL_ADDRESS_FIELD_NUMBER: int
                email_address: Text = ...

                def __init__(self,
                    *,
                    email_address : Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"email_address",b"email_address"]) -> None: ...

            class State(Message):
                DESCRIPTOR: Descriptor = ...
                NAME_FIELD_NUMBER: int
                VALUE_FIELD_NUMBER: int
                name: Text = ...
                value: bytes = ...

                def __init__(self,
                    *,
                    name : Text = ...,
                    value : bytes = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"name",b"name",u"value",b"value"]) -> None: ...

            class Message30(Message):
                DESCRIPTOR: Descriptor = ...
                class Message2(Message):
                    DESCRIPTOR: Descriptor = ...
                    class Message2(Message):
                        DESCRIPTOR: Descriptor = ...
                        BOOL4_FIELD_NUMBER: int
                        bool4: bool = ...

                        def __init__(self,
                            *,
                            bool4 : bool = ...,
                            ) -> None: ...
                        def ClearField(self, field_name: Literal[u"bool4",b"bool4"]) -> None: ...

                    STRING1_FIELD_NUMBER: int
                    MESSAGE2_FIELD_NUMBER: int
                    string1: Text = ...

                    @property
                    def message2(self) -> GetHomeGraphResponse.Home.Device.Message30.Message2.Message2: ...

                    def __init__(self,
                        *,
                        string1 : Text = ...,
                        message2 : Optional[GetHomeGraphResponse.Home.Device.Message30.Message2.Message2] = ...,
                        ) -> None: ...
                    def HasField(self, field_name: Literal[u"message2",b"message2"]) -> bool: ...
                    def ClearField(self, field_name: Literal[u"message2",b"message2",u"string1",b"string1"]) -> None: ...

                KEY_FIELD_NUMBER: int
                MESSAGE2_FIELD_NUMBER: int
                key: Text = ...

                @property
                def message2(self) -> GetHomeGraphResponse.Home.Device.Message30.Message2: ...

                def __init__(self,
                    *,
                    key : Text = ...,
                    message2 : Optional[GetHomeGraphResponse.Home.Device.Message30.Message2] = ...,
                    ) -> None: ...
                def HasField(self, field_name: Literal[u"message2",b"message2"]) -> bool: ...
                def ClearField(self, field_name: Literal[u"key",b"key",u"message2",b"message2"]) -> None: ...

            class Message34(Message):
                DESCRIPTOR: Descriptor = ...
                BOOL1_FIELD_NUMBER: int
                bool1: bool = ...

                def __init__(self,
                    *,
                    bool1 : bool = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"bool1",b"bool1"]) -> None: ...

            DEVICE_INFO_FIELD_NUMBER: int
            DEVICE_NAME_FIELD_NUMBER: int
            DEVICE_TYPE_FIELD_NUMBER: int
            TRAITS_FIELD_NUMBER: int
            SUFFIX_FIELD_NUMBER: int
            MESSAGE12_FIELD_NUMBER: int
            MESSAGE15_FIELD_NUMBER: int
            HARDWARE_FIELD_NUMBER: int
            MESSAGE18_FIELD_NUMBER: int
            TIMESTAMP19_FIELD_NUMBER: int
            MESSAGE20_FIELD_NUMBER: int
            MESSAGE25_FIELD_NUMBER: int
            LINKED_USERS_FIELD_NUMBER: int
            LOCAL_AUTH_TOKEN_FIELD_NUMBER: int
            STATES_FIELD_NUMBER: int
            MESSAGE30_FIELD_NUMBER: int
            MESSAGE34_FIELD_NUMBER: int
            NUM37_FIELD_NUMBER: int
            STRING41_FIELD_NUMBER: int
            STRING42_FIELD_NUMBER: int
            device_name: Text = ...
            device_type: Text = ...
            traits: RepeatedScalarFieldContainer[Text] = ...
            suffix: Text = ...
            timestamp19: int = ...
            local_auth_token: Text = ...
            num37: int = ...
            string41: Text = ...
            string42: Text = ...

            @property
            def device_info(self) -> GetHomeGraphResponse.Home.Device.DeviceInfo: ...

            @property
            def message12(self) -> GetHomeGraphResponse.Home.Device.Message12: ...

            @property
            def message15(self) -> GetHomeGraphResponse.Home.Device.Message15: ...

            @property
            def hardware(self) -> GetHomeGraphResponse.Home.Device.Hardware: ...

            @property
            def message18(self) -> GetHomeGraphResponse.Home.Device.Message18: ...

            @property
            def message20(self) -> GetHomeGraphResponse.Home.Device.Message20: ...

            @property
            def message25(self) -> GetHomeGraphResponse.Home.Device.Message25: ...

            @property
            def linked_users(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Device.LinkedUser]: ...

            @property
            def states(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Device.State]: ...

            @property
            def message30(self) -> GetHomeGraphResponse.Home.Device.Message30: ...

            @property
            def message34(self) -> GetHomeGraphResponse.Home.Device.Message34: ...

            def __init__(self,
                *,
                device_info : Optional[GetHomeGraphResponse.Home.Device.DeviceInfo] = ...,
                device_name : Text = ...,
                device_type : Text = ...,
                traits : Optional[Iterable[Text]] = ...,
                suffix : Text = ...,
                message12 : Optional[GetHomeGraphResponse.Home.Device.Message12] = ...,
                message15 : Optional[GetHomeGraphResponse.Home.Device.Message15] = ...,
                hardware : Optional[GetHomeGraphResponse.Home.Device.Hardware] = ...,
                message18 : Optional[GetHomeGraphResponse.Home.Device.Message18] = ...,
                timestamp19 : int = ...,
                message20 : Optional[GetHomeGraphResponse.Home.Device.Message20] = ...,
                message25 : Optional[GetHomeGraphResponse.Home.Device.Message25] = ...,
                linked_users : Optional[Iterable[GetHomeGraphResponse.Home.Device.LinkedUser]] = ...,
                local_auth_token : Text = ...,
                states : Optional[Iterable[GetHomeGraphResponse.Home.Device.State]] = ...,
                message30 : Optional[GetHomeGraphResponse.Home.Device.Message30] = ...,
                message34 : Optional[GetHomeGraphResponse.Home.Device.Message34] = ...,
                num37 : int = ...,
                string41 : Text = ...,
                string42 : Text = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"device_info",b"device_info",u"hardware",b"hardware",u"message12",b"message12",u"message15",b"message15",u"message18",b"message18",u"message20",b"message20",u"message25",b"message25",u"message30",b"message30",u"message34",b"message34"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"device_info",b"device_info",u"device_name",b"device_name",u"device_type",b"device_type",u"hardware",b"hardware",u"linked_users",b"linked_users",u"local_auth_token",b"local_auth_token",u"message12",b"message12",u"message15",b"message15",u"message18",b"message18",u"message20",b"message20",u"message25",b"message25",u"message30",b"message30",u"message34",b"message34",u"num37",b"num37",u"states",b"states",u"string41",b"string41",u"string42",b"string42",u"suffix",b"suffix",u"timestamp19",b"timestamp19",u"traits",b"traits"]) -> None: ...

        class Message11(Message):
            DESCRIPTOR: Descriptor = ...
            BOOL1_FIELD_NUMBER: int
            bool1: bool = ...

            def __init__(self,
                *,
                bool1 : bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"bool1",b"bool1"]) -> None: ...

        class Message13(Message):
            DESCRIPTOR: Descriptor = ...
            class Message1(Message):
                DESCRIPTOR: Descriptor = ...
                class DeviceInfo(Message):
                    DESCRIPTOR: Descriptor = ...
                    class AgentInfo(Message):
                        DESCRIPTOR: Descriptor = ...
                        API_PROJECT_ID_FIELD_NUMBER: int
                        UNIQUE_ID_FIELD_NUMBER: int
                        api_project_id: Text = ...
                        unique_id: Text = ...

                        def __init__(self,
                            *,
                            api_project_id : Text = ...,
                            unique_id : Text = ...,
                            ) -> None: ...
                        def ClearField(self, field_name: Literal[u"api_project_id",b"api_project_id",u"unique_id",b"unique_id"]) -> None: ...

                    DEVICE_ID_FIELD_NUMBER: int
                    AGENT_INFO_FIELD_NUMBER: int
                    device_id: Text = ...

                    @property
                    def agent_info(self) -> GetHomeGraphResponse.Home.Message13.Message1.DeviceInfo.AgentInfo: ...

                    def __init__(self,
                        *,
                        device_id : Text = ...,
                        agent_info : Optional[GetHomeGraphResponse.Home.Message13.Message1.DeviceInfo.AgentInfo] = ...,
                        ) -> None: ...
                    def HasField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> bool: ...
                    def ClearField(self, field_name: Literal[u"agent_info",b"agent_info",u"device_id",b"device_id"]) -> None: ...

                DEVICE_INFO_FIELD_NUMBER: int

                @property
                def device_info(self) -> GetHomeGraphResponse.Home.Message13.Message1.DeviceInfo: ...

                def __init__(self,
                    *,
                    device_info : Optional[GetHomeGraphResponse.Home.Message13.Message1.DeviceInfo] = ...,
                    ) -> None: ...
                def HasField(self, field_name: Literal[u"device_info",b"device_info"]) -> bool: ...
                def ClearField(self, field_name: Literal[u"device_info",b"device_info"]) -> None: ...

            MESSAGE1_FIELD_NUMBER: int
            DUO_CALL_URL_FIELD_NUMBER: int
            DUO_PHONE_NUMBER_FIELD_NUMBER: int
            duo_call_url: Text = ...
            duo_phone_number: Text = ...

            @property
            def message1(self) -> GetHomeGraphResponse.Home.Message13.Message1: ...

            def __init__(self,
                *,
                message1 : Optional[GetHomeGraphResponse.Home.Message13.Message1] = ...,
                duo_call_url : Text = ...,
                duo_phone_number : Text = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"message1",b"message1"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"duo_call_url",b"duo_call_url",u"duo_phone_number",b"duo_phone_number",u"message1",b"message1"]) -> None: ...

        class Message15(Message):
            DESCRIPTOR: Descriptor = ...
            class Message3(Message):
                DESCRIPTOR: Descriptor = ...
                class Message2(Message):
                    DESCRIPTOR: Descriptor = ...
                    STRING1_FIELD_NUMBER: int
                    string1: Text = ...

                    def __init__(self,
                        *,
                        string1 : Text = ...,
                        ) -> None: ...
                    def ClearField(self, field_name: Literal[u"string1",b"string1"]) -> None: ...

                STRING1_FIELD_NUMBER: int
                MESSAGE2_FIELD_NUMBER: int
                string1: Text = ...

                @property
                def message2(self) -> GetHomeGraphResponse.Home.Message15.Message3.Message2: ...

                def __init__(self,
                    *,
                    string1 : Text = ...,
                    message2 : Optional[GetHomeGraphResponse.Home.Message15.Message3.Message2] = ...,
                    ) -> None: ...
                def HasField(self, field_name: Literal[u"message2",b"message2"]) -> bool: ...
                def ClearField(self, field_name: Literal[u"message2",b"message2",u"string1",b"string1"]) -> None: ...

            BOOL1_FIELD_NUMBER: int
            STRING2_FIELD_NUMBER: int
            MESSAGE3_FIELD_NUMBER: int
            BOOL4_FIELD_NUMBER: int
            bool1: bool = ...
            string2: Text = ...
            bool4: bool = ...

            @property
            def message3(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Message15.Message3]: ...

            def __init__(self,
                *,
                bool1 : bool = ...,
                string2 : Text = ...,
                message3 : Optional[Iterable[GetHomeGraphResponse.Home.Message15.Message3]] = ...,
                bool4 : bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"bool1",b"bool1",u"bool4",b"bool4",u"message3",b"message3",u"string2",b"string2"]) -> None: ...

        HOME_ID_FIELD_NUMBER: int
        HOME_NAME_FIELD_NUMBER: int
        LOCATION_FIELD_NUMBER: int
        LINKED_USERS_FIELD_NUMBER: int
        ROOMS_FIELD_NUMBER: int
        DEVICES_FIELD_NUMBER: int
        MESSAGE11_FIELD_NUMBER: int
        STRING12_FIELD_NUMBER: int
        MESSAGE13_FIELD_NUMBER: int
        MESSAGE14_FIELD_NUMBER: int
        MESSAGE15_FIELD_NUMBER: int
        home_id: Text = ...
        home_name: Text = ...
        string12: Text = ...
        message14: Text = ...

        @property
        def location(self) -> GetHomeGraphResponse.Home.Location: ...

        @property
        def linked_users(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.LinkedUser]: ...

        @property
        def rooms(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Room]: ...

        @property
        def devices(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Home.Device]: ...

        @property
        def message11(self) -> GetHomeGraphResponse.Home.Message11: ...

        @property
        def message13(self) -> GetHomeGraphResponse.Home.Message13: ...

        @property
        def message15(self) -> GetHomeGraphResponse.Home.Message15: ...

        def __init__(self,
            *,
            home_id : Text = ...,
            home_name : Text = ...,
            location : Optional[GetHomeGraphResponse.Home.Location] = ...,
            linked_users : Optional[Iterable[GetHomeGraphResponse.Home.LinkedUser]] = ...,
            rooms : Optional[Iterable[GetHomeGraphResponse.Home.Room]] = ...,
            devices : Optional[Iterable[GetHomeGraphResponse.Home.Device]] = ...,
            message11 : Optional[GetHomeGraphResponse.Home.Message11] = ...,
            string12 : Text = ...,
            message13 : Optional[GetHomeGraphResponse.Home.Message13] = ...,
            message14 : Text = ...,
            message15 : Optional[GetHomeGraphResponse.Home.Message15] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"location",b"location",u"message11",b"message11",u"message13",b"message13",u"message15",b"message15"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"devices",b"devices",u"home_id",b"home_id",u"home_name",b"home_name",u"linked_users",b"linked_users",u"location",b"location",u"message11",b"message11",u"message13",b"message13",u"message14",b"message14",u"message15",b"message15",u"rooms",b"rooms",u"string12",b"string12"]) -> None: ...

    class Group(Message):
        DESCRIPTOR: Descriptor = ...
        class DeviceInfo(Message):
            DESCRIPTOR: Descriptor = ...
            class AgentInfo(Message):
                DESCRIPTOR: Descriptor = ...
                API_PROJECT_ID_FIELD_NUMBER: int
                UNIQUE_ID_FIELD_NUMBER: int
                api_project_id: Text = ...
                unique_id: Text = ...

                def __init__(self,
                    *,
                    api_project_id : Text = ...,
                    unique_id : Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: Literal[u"api_project_id",b"api_project_id",u"unique_id",b"unique_id"]) -> None: ...

            AGENT_INFO_FIELD_NUMBER: int

            @property
            def agent_info(self) -> GetHomeGraphResponse.Group.DeviceInfo.AgentInfo: ...

            def __init__(self,
                *,
                agent_info : Optional[GetHomeGraphResponse.Group.DeviceInfo.AgentInfo] = ...,
                ) -> None: ...
            def HasField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> bool: ...
            def ClearField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> None: ...

        class Message12(Message):
            DESCRIPTOR: Descriptor = ...
            BOOL3_FIELD_NUMBER: int
            BOOL4_FIELD_NUMBER: int
            BOOL37_FIELD_NUMBER: int
            BOOL38_FIELD_NUMBER: int
            bool3: bool = ...
            bool4: bool = ...
            bool37: bool = ...
            bool38: bool = ...

            def __init__(self,
                *,
                bool3 : bool = ...,
                bool4 : bool = ...,
                bool37 : bool = ...,
                bool38 : bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"bool3",b"bool3",u"bool37",b"bool37",u"bool38",b"bool38",u"bool4",b"bool4"]) -> None: ...

        class Message15(Message):
            DESCRIPTOR: Descriptor = ...
            STRING1_FIELD_NUMBER: int
            NUM5_FIELD_NUMBER: int
            NUM6_FIELD_NUMBER: int
            string1: Text = ...
            num5: int = ...
            num6: int = ...

            def __init__(self,
                *,
                string1 : Text = ...,
                num5 : int = ...,
                num6 : int = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"num5",b"num5",u"num6",b"num6",u"string1",b"string1"]) -> None: ...

        class Message17(Message):
            DESCRIPTOR: Descriptor = ...
            GROUP_MODEL_FIELD_NUMBER: int
            group_model: Text = ...

            def __init__(self,
                *,
                group_model : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"group_model",b"group_model"]) -> None: ...

        class Message18(Message):
            DESCRIPTOR: Descriptor = ...
            GROUP_NAME_FIELD_NUMBER: int
            group_name: Text = ...

            def __init__(self,
                *,
                group_name : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"group_name",b"group_name"]) -> None: ...

        class Message34(Message):
            DESCRIPTOR: Descriptor = ...
            BOOL1_FIELD_NUMBER: int
            bool1: bool = ...

            def __init__(self,
                *,
                bool1 : bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"bool1",b"bool1"]) -> None: ...

        DEVICE_INFO_FIELD_NUMBER: int
        GROUP_NMAE_FIELD_NUMBER: int
        DEVICE_TYPE_FIELD_NUMBER: int
        TRAITS_FIELD_NUMBER: int
        SUFFIX_FIELD_NUMBER: int
        MESSAGE12_FIELD_NUMBER: int
        MESSAGE15_FIELD_NUMBER: int
        MESSAGE17_FIELD_NUMBER: int
        MESSAGE18_FIELD_NUMBER: int
        TIMESTAMP19_FIELD_NUMBER: int
        MESSAGE34_FIELD_NUMBER: int
        group_nmae: Text = ...
        device_type: Text = ...
        traits: Text = ...
        suffix: Text = ...
        timestamp19: int = ...

        @property
        def device_info(self) -> GetHomeGraphResponse.Group.DeviceInfo: ...

        @property
        def message12(self) -> GetHomeGraphResponse.Group.Message12: ...

        @property
        def message15(self) -> GetHomeGraphResponse.Group.Message15: ...

        @property
        def message17(self) -> GetHomeGraphResponse.Group.Message17: ...

        @property
        def message18(self) -> GetHomeGraphResponse.Group.Message18: ...

        @property
        def message34(self) -> GetHomeGraphResponse.Group.Message34: ...

        def __init__(self,
            *,
            device_info : Optional[GetHomeGraphResponse.Group.DeviceInfo] = ...,
            group_nmae : Text = ...,
            device_type : Text = ...,
            traits : Text = ...,
            suffix : Text = ...,
            message12 : Optional[GetHomeGraphResponse.Group.Message12] = ...,
            message15 : Optional[GetHomeGraphResponse.Group.Message15] = ...,
            message17 : Optional[GetHomeGraphResponse.Group.Message17] = ...,
            message18 : Optional[GetHomeGraphResponse.Group.Message18] = ...,
            timestamp19 : int = ...,
            message34 : Optional[GetHomeGraphResponse.Group.Message34] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"device_info",b"device_info",u"message12",b"message12",u"message15",b"message15",u"message17",b"message17",u"message18",b"message18",u"message34",b"message34"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"device_info",b"device_info",u"device_type",b"device_type",u"group_nmae",b"group_nmae",u"message12",b"message12",u"message15",b"message15",u"message17",b"message17",u"message18",b"message18",u"message34",b"message34",u"suffix",b"suffix",u"timestamp19",b"timestamp19",u"traits",b"traits"]) -> None: ...

    class RoomType(Message):
        DESCRIPTOR: Descriptor = ...
        CODE_FIELD_NUMBER: int
        NAME_FIELD_NUMBER: int
        code: Text = ...
        name: Text = ...

        def __init__(self,
            *,
            code : Text = ...,
            name : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"code",b"code",u"name",b"name"]) -> None: ...

    class DeviceType(Message):
        DESCRIPTOR: Descriptor = ...
        CODE_FIELD_NUMBER: int
        NAME_FIELD_NUMBER: int
        code: Text = ...
        name: Text = ...

        def __init__(self,
            *,
            code : Text = ...,
            name : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"code",b"code",u"name",b"name"]) -> None: ...

    class ProjectType(Message):
        DESCRIPTOR: Descriptor = ...
        CODE_FIELD_NUMBER: int
        NAME_FIELD_NUMBER: int
        code: Text = ...
        name: Text = ...

        def __init__(self,
            *,
            code : Text = ...,
            name : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"code",b"code",u"name",b"name"]) -> None: ...

    class Message11(Message):
        DESCRIPTOR: Descriptor = ...
        class Message2(Message):
            DESCRIPTOR: Descriptor = ...
            NUM2_FIELD_NUMBER: int
            num2: int = ...

            def __init__(self,
                *,
                num2 : int = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"num2",b"num2"]) -> None: ...

        NAME_FIELD_NUMBER: int
        MESSAGE2_FIELD_NUMBER: int
        name: Text = ...

        @property
        def message2(self) -> GetHomeGraphResponse.Message11.Message2: ...

        def __init__(self,
            *,
            name : Text = ...,
            message2 : Optional[GetHomeGraphResponse.Message11.Message2] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"message2",b"message2"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"message2",b"message2",u"name",b"name"]) -> None: ...

    class LinkedApp(Message):
        DESCRIPTOR: Descriptor = ...
        STRING1_FIELD_NUMBER: int
        STRING2_FIELD_NUMBER: int
        NUM3_FIELD_NUMBER: int
        NUM4_FIELD_NUMBER: int
        NUM5_FIELD_NUMBER: int
        string1: Text = ...
        string2: Text = ...
        num3: int = ...
        num4: int = ...
        num5: int = ...

        def __init__(self,
            *,
            string1 : Text = ...,
            string2 : Text = ...,
            num3 : int = ...,
            num4 : int = ...,
            num5 : int = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"num3",b"num3",u"num4",b"num4",u"num5",b"num5",u"string1",b"string1",u"string2",b"string2"]) -> None: ...

    TIMESTAMP1_FIELD_NUMBER: int
    HOME_FIELD_NUMBER: int
    GROUPS_FIELD_NUMBER: int
    ROOM_TYPES_FIELD_NUMBER: int
    STRING5_FIELD_NUMBER: int
    BOOL6_FIELD_NUMBER: int
    DEVICE_TYPES_FIELD_NUMBER: int
    PROJECT_TYPES_FIELD_NUMBER: int
    MESSAGE11_FIELD_NUMBER: int
    LINKED_APPS_FIELD_NUMBER: int
    timestamp1: int = ...
    string5: Text = ...
    bool6: bool = ...

    @property
    def home(self) -> GetHomeGraphResponse.Home: ...

    @property
    def groups(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Group]: ...

    @property
    def room_types(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.RoomType]: ...

    @property
    def device_types(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.DeviceType]: ...

    @property
    def project_types(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.ProjectType]: ...

    @property
    def message11(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.Message11]: ...

    @property
    def linked_apps(self) -> RepeatedCompositeFieldContainer[GetHomeGraphResponse.LinkedApp]: ...

    def __init__(self,
        *,
        timestamp1 : int = ...,
        home : Optional[GetHomeGraphResponse.Home] = ...,
        groups : Optional[Iterable[GetHomeGraphResponse.Group]] = ...,
        room_types : Optional[Iterable[GetHomeGraphResponse.RoomType]] = ...,
        string5 : Text = ...,
        bool6 : bool = ...,
        device_types : Optional[Iterable[GetHomeGraphResponse.DeviceType]] = ...,
        project_types : Optional[Iterable[GetHomeGraphResponse.ProjectType]] = ...,
        message11 : Optional[Iterable[GetHomeGraphResponse.Message11]] = ...,
        linked_apps : Optional[Iterable[GetHomeGraphResponse.LinkedApp]] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"home",b"home"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"bool6",b"bool6",u"device_types",b"device_types",u"groups",b"groups",u"home",b"home",u"linked_apps",b"linked_apps",u"message11",b"message11",u"project_types",b"project_types",u"room_types",b"room_types",u"string5",b"string5",u"timestamp1",b"timestamp1"]) -> None: ...

class GetAssistantDeviceSettingsRequest(Message):
    DESCRIPTOR: Descriptor = ...
    class DeviceInfo(Message):
        DESCRIPTOR: Descriptor = ...
        class AgentInfo(Message):
            DESCRIPTOR: Descriptor = ...
            API_PROJECT_ID_FIELD_NUMBER: int
            UNIQUE_ID_FIELD_NUMBER: int
            api_project_id: Text = ...
            unique_id: Text = ...

            def __init__(self,
                *,
                api_project_id : Text = ...,
                unique_id : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"api_project_id",b"api_project_id",u"unique_id",b"unique_id"]) -> None: ...

        DEVICE_ID_FIELD_NUMBER: int
        AGENT_INFO_FIELD_NUMBER: int
        device_id: Text = ...

        @property
        def agent_info(self) -> GetAssistantDeviceSettingsRequest.DeviceInfo.AgentInfo: ...

        def __init__(self,
            *,
            device_id : Text = ...,
            agent_info : Optional[GetAssistantDeviceSettingsRequest.DeviceInfo.AgentInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"agent_info",b"agent_info",u"device_id",b"device_id"]) -> None: ...

    DEVICE_INFO_FIELD_NUMBER: int
    STRING2_FIELD_NUMBER: int
    string2: Text = ...

    @property
    def device_info(self) -> GetAssistantDeviceSettingsRequest.DeviceInfo: ...

    def __init__(self,
        *,
        device_info : Optional[GetAssistantDeviceSettingsRequest.DeviceInfo] = ...,
        string2 : Text = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"device_info",b"device_info"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"device_info",b"device_info",u"string2",b"string2"]) -> None: ...

class GetAssistantDeviceSettingsResponse(Message):
    DESCRIPTOR: Descriptor = ...
    class Message1(Message):
        DESCRIPTOR: Descriptor = ...
        NUM1_FIELD_NUMBER: int
        NUM2_FIELD_NUMBER: int
        NUM4_FIELD_NUMBER: int
        NUM5_FIELD_NUMBER: int
        NUM6_FIELD_NUMBER: int
        STRING10_FIELD_NUMBER: int
        num1: int = ...
        num2: int = ...
        num4: int = ...
        num5: int = ...
        num6: int = ...
        string10: Text = ...

        def __init__(self,
            *,
            num1 : int = ...,
            num2 : int = ...,
            num4 : int = ...,
            num5 : int = ...,
            num6 : int = ...,
            string10 : Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: Literal[u"num1",b"num1",u"num2",b"num2",u"num4",b"num4",u"num5",b"num5",u"num6",b"num6",u"string10",b"string10"]) -> None: ...

    MESSAGE1_FIELD_NUMBER: int

    @property
    def message1(self) -> GetAssistantDeviceSettingsResponse.Message1: ...

    def __init__(self,
        *,
        message1 : Optional[GetAssistantDeviceSettingsResponse.Message1] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"message1",b"message1"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"message1",b"message1"]) -> None: ...

class UpdateAssistantDeviceSettingsRequest(Message):
    DESCRIPTOR: Descriptor = ...
    class DeviceInfo(Message):
        DESCRIPTOR: Descriptor = ...
        class AgentInfo(Message):
            DESCRIPTOR: Descriptor = ...
            API_PROJECT_ID_FIELD_NUMBER: int
            UNIQUE_ID_FIELD_NUMBER: int
            api_project_id: Text = ...
            unique_id: Text = ...

            def __init__(self,
                *,
                api_project_id : Text = ...,
                unique_id : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"api_project_id",b"api_project_id",u"unique_id",b"unique_id"]) -> None: ...

        DEVICE_ID_FIELD_NUMBER: int
        AGENT_INFO_FIELD_NUMBER: int
        device_id: Text = ...

        @property
        def agent_info(self) -> UpdateAssistantDeviceSettingsRequest.DeviceInfo.AgentInfo: ...

        def __init__(self,
            *,
            device_id : Text = ...,
            agent_info : Optional[UpdateAssistantDeviceSettingsRequest.DeviceInfo.AgentInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"agent_info",b"agent_info"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"agent_info",b"agent_info",u"device_id",b"device_id"]) -> None: ...

    class UpdateData(Message):
        DESCRIPTOR: Descriptor = ...
        class Message1(Message):
            DESCRIPTOR: Descriptor = ...
            YOUTUBE_RESTRICTED_MODE_FIELD_NUMBER: int
            YOUTUBE_TV_CONTENT_FILTER_FIELD_NUMBER: int
            LOCALE_FIELD_NUMBER: int
            youtube_restricted_mode: int = ...
            youtube_tv_content_filter: int = ...
            locale: Text = ...

            def __init__(self,
                *,
                youtube_restricted_mode : int = ...,
                youtube_tv_content_filter : int = ...,
                locale : Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: Literal[u"locale",b"locale",u"youtube_restricted_mode",b"youtube_restricted_mode",u"youtube_tv_content_filter",b"youtube_tv_content_filter"]) -> None: ...

        MESSAGE1_FIELD_NUMBER: int

        @property
        def message1(self) -> UpdateAssistantDeviceSettingsRequest.UpdateData.Message1: ...

        def __init__(self,
            *,
            message1 : Optional[UpdateAssistantDeviceSettingsRequest.UpdateData.Message1] = ...,
            ) -> None: ...
        def HasField(self, field_name: Literal[u"message1",b"message1"]) -> bool: ...
        def ClearField(self, field_name: Literal[u"message1",b"message1"]) -> None: ...

    STRING1_FIELD_NUMBER: int
    DEVICE_INFO_FIELD_NUMBER: int
    UPDATE_DATA_FIELD_NUMBER: int
    string1: Text = ...

    @property
    def device_info(self) -> UpdateAssistantDeviceSettingsRequest.DeviceInfo: ...

    @property
    def update_data(self) -> UpdateAssistantDeviceSettingsRequest.UpdateData: ...

    def __init__(self,
        *,
        string1 : Text = ...,
        device_info : Optional[UpdateAssistantDeviceSettingsRequest.DeviceInfo] = ...,
        update_data : Optional[UpdateAssistantDeviceSettingsRequest.UpdateData] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal[u"device_info",b"device_info",u"update_data",b"update_data"]) -> bool: ...
    def ClearField(self, field_name: Literal[u"device_info",b"device_info",u"string1",b"string1",u"update_data",b"update_data"]) -> None: ...

class UpdateAssistantDeviceSettingsResponse(Message):
    DESCRIPTOR: Descriptor = ...
    STRING1_FIELD_NUMBER: int
    string1: Text = ...

    def __init__(self,
        *,
        string1 : Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: Literal[u"string1",b"string1"]) -> None: ...
